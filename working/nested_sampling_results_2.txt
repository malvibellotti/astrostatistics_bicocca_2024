         nlive: 1000
         niter: 12383
         ncall: array([1, 1, 1, ..., 1, 1, 1])
           eff: 15.220061412487206
       samples: array([[43.61352791, 19.99780586, 19.67685791,  6.67324881],
       [63.61669911, 19.99479344, 16.28140975,  6.27583868],
       [63.32752095, 19.61121102, 17.92768952,  4.94447737],
       ...,
       [55.66679534, 10.32538912,  2.80382323,  5.23323542],
       [55.85396003, 10.30528827,  2.6909313 ,  5.43013905],
       [55.77082011, 10.30541413,  2.67116574,  5.43457786]])
          blob: array([None, None, None, ..., None, None, None], dtype=object)
    samples_id: array([548, 689, 689, ..., 799, 123,  10])
    samples_it: array([    0,     0,     2, ..., 12320, 11698, 11228])
     samples_u: array([[0.19447897, 0.99989029, 0.9838429 , 0.90221414],
       [0.48023856, 0.99973967, 0.81407049, 0.84843052],
       [0.47610744, 0.98056055, 0.89638448, 0.66825036],
       ...,
       [0.3666685 , 0.51626946, 0.14019116, 0.70732952],
       [0.36934229, 0.51526441, 0.13454656, 0.73397752],
       [0.36815457, 0.51527071, 0.13355829, 0.73457825]])
         logwt: array([-9649.28321579, -9235.00327152, -8472.60014158, ...,
        -255.55680315,  -255.55333499,  -255.54148438])
          logl: array([-9641.68131383, -9227.40037006, -8464.99624062, ...,
        -236.26950548,  -236.26603271,  -236.24590256])
        logvol: array([-9.99500333e-04, -1.99900067e-03, -2.99850100e-03, ...,
       -1.81869551e+01, -1.85924202e+01, -1.92855674e+01])
          logz: array([-9649.28321579, -9235.00327152, -8472.60014158, ...,
        -248.61261193,  -248.61164483,  -248.61066715])
       logzerr: array([0.        , 0.        , 0.        , ..., 0.23442387, 0.24451474,
       0.26106688])
   information: array([ 0.        ,  0.        ,  0.        , ..., 10.43367356,
       10.44559298, 10.45766611])
         bound: [<dynesty.bounding.UnitCube object at 0x7af4bced6650>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bc7da650>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bcf5d710>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bc6f9bd0>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c41eb9d0>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4dfbb90>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdc0a490>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bd7bcd50>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bd94d390>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4df8990>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bd777990>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bd58c7d0>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bd58ead0>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bd636390>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bd198050>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bd199f50>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdd36e90>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c417cd90>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdbfad10>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdc2e4d0>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdb91790>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4e442d0>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4c97f90>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4e27490>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4128790>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdebee90>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdcab650>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdca8590>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdf97ad0>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdc9e310>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c61c70d0>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c61c6990>, <dynesty.bounding.MultiEllipsoid object at 0x7af4bdbea650>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4cf5a10>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4cf7950>, <dynesty.bounding.MultiEllipsoid object at 0x7af4c4cf6d50>]
    bound_iter: array([ 0,  0,  0, ..., 35, 35, 35])
 samples_bound: array([34, 35, 35, 30, 33, 35, 35, 29, 28, 35, 34, 35, 34, 33, 35, 35, 35,
       35, 34, 35, 35, 35, 31, 34, 35, 30, 34, 34, 35, 33, 35, 35, 32, 29,
       35, 35, 33, 35, 34, 35, 32, 30, 35, 33, 33, 32, 35, 33, 34, 35, 31,
       31, 34, 34, 33, 35, 31, 32, 32, 34, 33, 34, 33, 31, 34, 32, 33, 34,
       35, 34, 30, 33, 32, 34, 33, 35, 33, 35, 33, 30, 33, 27, 34, 34, 35,
       31, 34, 32, 33, 33, 35, 34, 33, 33, 29, 35, 34, 35, 33, 33, 35, 34,
       33, 34, 34, 35, 35, 35, 26, 34, 35, 35, 34, 33, 34, 35, 27, 35, 33,
       33, 32, 31, 35, 33, 35, 29, 34, 32, 34, 34, 33, 35, 34, 33, 35, 33,
       34, 33, 33, 34, 35, 26, 35, 32, 34, 34, 35, 34, 35, 33, 35, 35, 33,
       33, 35, 31, 33, 34, 35, 35, 34, 32, 35, 34, 34, 33, 35, 30, 35, 35,
       35, 35, 35, 29, 33, 34, 35, 34, 34, 34, 34, 34, 34, 34, 35, 29, 35,
       35, 35, 35, 35, 34, 33, 33, 34, 34, 35, 32, 32, 35, 34, 33, 34, 34,
       30, 35, 29, 34, 33, 35, 33, 34, 35, 35, 34, 34, 34, 35, 33, 35, 35,
       21, 34, 34, 33, 34, 33, 34, 34, 35, 35, 33, 35, 35, 32, 35, 34, 33,
       35, 34, 34, 35, 34, 35, 35, 33, 35, 34, 32, 34, 34, 34, 35, 35, 30,
       34, 34, 30, 34, 35, 34, 34, 35, 32, 35, 35, 33, 33, 32, 35, 35, 34,
       34, 32, 34, 35, 33, 33, 35, 33, 33, 35, 34, 33, 33, 34, 35, 35, 34,
       35, 29, 33, 35, 34, 35, 35, 34, 33, 32, 35, 34, 35, 33, 35, 35, 34,
       34, 35, 35, 31, 35, 33, 33, 32, 23, 34, 34, 34, 35, 31, 32, 32, 32,
       34, 35, 34, 35, 35, 34, 33, 34, 35, 34, 35, 11, 34, 35, 34, 33, 33,
       34, 34, 34, 34, 33, 33, 33, 34, 32, 18, 34, 35, 35, 33, 35, 33, 33,
       35, 26, 27, 34, 31, 34, 35, 34, 35, 35, 35, 35, 34, 33, 34, 34, 27,
       30, 35, 35, 34, 33, 31, 32, 34, 32, 35, 33, 35, 35, 35, 35, 35, 35,
       33, 31, 34, 35, 34, 26, 35, 34, 35, 32, 28, 34, 35, 35, 34, 34, 34,
       32, 35, 34, 34, 33, 34, 34, 33, 33, 35, 31, 35, 35, 32, 29, 35, 34,
       35, 34, 35, 34, 31, 34, 34, 34, 34, 35, 35, 35, 34, 34, 32, 33, 34,
       35, 34, 34, 35, 33, 35, 35, 34, 33, 32, 33, 35, 34, 35, 34, 35, 35,
       34, 34, 34, 35, 34, 33, 30, 34, 35, 30, 35, 32, 35, 35, 35, 33, 30,
       34, 35, 34, 34, 35, 34, 32, 35, 35, 34, 35, 35, 33, 34, 34, 35, 34,
       32, 35, 34, 32, 35, 35, 35, 35, 33, 33, 29, 32, 25, 34, 33, 35, 34,
       35, 35, 35, 34, 35, 35, 32, 35, 32, 34, 26, 35, 33, 35, 34, 28, 35,
       34, 34, 35, 35, 35, 35, 34, 35, 35, 34, 34, 35, 34, 34, 33, 34, 34,
       34, 34, 33, 35, 31, 35, 34, 34, 34, 34, 32, 33, 35, 34, 34, 35, 35,
       33, 34, 34, 32, 32, 33, 33, 34, 34, 34, 32, 35, 35, 31, 33, 30, 34,
       33, 34, 35, 35, 34, 35, 33, 34, 27, 33, 35, 32, 33, 34, 30, 32, 34,
       34, 32, 33, 34, 34, 33, 35, 34, 34, 35, 30, 35, 34, 34, 35, 34, 35,
       35, 35, 33, 34, 30, 33, 33, 30, 35, 34, 34, 34, 35, 34, 27, 34, 35,
       34, 33, 34, 35, 35, 34, 32, 33, 35, 34, 32, 35, 29, 35, 34, 34, 26,
       34, 35, 34, 35, 34, 34, 35, 32, 34, 35, 33, 35, 32, 34, 35, 34, 33,
       32, 33, 28, 32, 32, 34, 35, 33, 33, 35, 34, 35, 34, 34, 35, 34, 34,
       35, 35, 33, 33, 33, 34, 34, 34, 34, 33, 34, 26, 34, 33, 35, 35, 34,
       34, 35, 34, 34, 34, 34, 32, 35, 35, 31, 34, 35, 32, 32, 35, 35, 33,
       35, 34, 34, 35, 34, 32, 34, 29, 33, 34, 35, 35, 34, 35, 34, 33, 35,
       34, 34, 35, 35, 34, 31, 33, 35, 35, 35, 34, 34, 32, 35, 35, 35, 34,
       35, 30, 34, 34, 34, 35, 35, 34, 32, 32, 31, 34, 34, 34, 34, 31, 33,
       34, 34, 29, 34, 35, 34, 34, 34, 34, 35, 34, 35, 35, 33, 33, 33, 34,
       35, 33, 35, 34, 35, 35, 35, 33, 32, 34, 34, 33, 33, 34, 35, 35, 34,
       35, 35, 34, 35, 35, 32, 33, 35, 35, 35, 34, 34, 32, 35, 31, 35, 35,
       33, 34, 35, 31, 34, 34, 34, 34, 34, 35, 34, 35, 33, 34, 35, 35, 33,
       35, 35, 31, 35, 34, 35, 34, 35, 33, 35, 34, 34, 32, 34, 34, 29, 35,
       34, 35, 34, 34, 34, 31, 35, 35, 34, 33, 35, 35, 28, 35, 32, 33, 34,
       33, 34, 35, 33, 34, 27, 35, 33, 35, 33, 32, 34, 34, 34, 34, 34, 33,
       35, 34, 35, 34, 34, 35, 34, 34, 33, 35, 35, 31, 35, 32, 35, 34, 32,
       34, 35, 34, 35, 29, 34, 34, 35, 35, 33, 35, 34, 31, 35, 34, 34, 35,
       34, 35, 31, 35, 34, 32, 33, 35, 33, 35, 32, 33, 33, 35, 35, 35, 35,
       35, 31, 34, 35, 34, 35, 35, 34, 34, 35, 35, 34, 32, 34, 35, 30, 34,
       33, 33, 34, 33, 33, 33, 35, 32, 35, 32, 34, 34, 34, 33, 34, 34, 35,
       35, 34, 34, 35, 32, 34, 21, 35, 33, 34, 33, 27, 34, 33, 34, 35, 34,
       33, 34, 35, 30, 34, 34, 31, 34, 35, 33, 35, 35, 34, 33])
         scale: array([1., 1., 1., ..., 1., 1., 1.])